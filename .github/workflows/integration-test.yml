name: Integration Tests

on:
  workflow_call:
  workflow_dispatch:

jobs:
  integration-test:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    env:
      SPRING_PROFILES_ACTIVE: ci
      SPRING_DATASOURCE_URL: jdbc:oracle:thin:@localhost:1522/XEPDB1
      REGISTRY: ghcr.io/${{ github.repository_owner }}
      IMAGE_TAG: ${{ github.sha }}
      VITE_BACKEND_HOST: backend
      ORACLE_PASSWORD: ${{ secrets.ORACLE_PASSWORD_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start Oracle service
        run: ORACLE_PASSWORD=${{ secrets.ORACLE_PASSWORD_SECRET }} docker compose up -d oracle

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install xml2js package
        run: npm install xml2js
        working-directory: ./backend/scripts

      - name: Set environment variable for Spring profile
        run: echo "SPRING_PROFILES_ACTIVE=ci" >> $GITHUB_ENV

      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '18'
          cache: 'maven'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run Flyway migration with retries
        run: |
          ORACLE_PASSWORD=${{ secrets.ORACLE_PASSWORD_SECRET }} docker compose up flyway
        env:
          SPRING_DATASOURCE_URL: jdbc:oracle:thin:@localhost:1522/XEPDB1

      - name: Check data in Oracle after migration
        run: |
          CONTAINER_ID=$(docker ps -qf "name=oracle")
          if [ -z "$CONTAINER_ID" ]; then
            echo "Oracle container not found. Exiting."
            exit 1
          fi
          echo "Querying CORE.currency table for data count..."
          docker exec $CONTAINER_ID sqlplus -s system/${{ secrets.ORACLE_PASSWORD_SECRET }}@localhost:1521/XEPDB1 <<EOF > currency_count.txt
          SET HEADING OFF;
          SET FEEDBACK OFF;
          SET PAGESIZE 0;
          SET LINESIZE 100;
          SELECT COUNT(*) FROM CORE.currency;
          EXIT;
          EOF
          echo "Data count in CORE.currency table:"
          cat currency_count.txt
          if grep -q '[0-9]' currency_count.txt; then
            echo "Data check succeeded."
          else
            echo "Data check failed."
            exit 1
          fi
          echo "Querying Flyway schema history for applied migrations..."
          docker exec $CONTAINER_ID sqlplus -s system/${{ secrets.ORACLE_PASSWORD_SECRET }}@localhost:1521/XEPDB1 <<EOF > flyway_history.txt
          SET HEADING ON;
          SET FEEDBACK OFF;
          SET PAGESIZE 100;
          SET LINESIZE 100;
          SELECT version, description, success FROM CORE.flyway_schema_history ORDER BY installed_rank;
          EXIT;
          EOF
          echo "Flyway schema history:"
          cat flyway_history.txt

      - name: Run integration tests
        run: mvn clean verify -Pmedium-test -DskipUnitTests=true
        working-directory: ./backend

      - name: Run test report aggregation script
        run: node aggregate-test-report.js ../target/medium-test-reports
        working-directory: ./backend/scripts

      - name: Upload Surefire Report
        uses: actions/upload-artifact@v4
        with:
          name: surefire-report-medium
          path: ./backend/target/medium-test-reports/

      - name: Stop services with docker-compose
        if: always()
        run: docker compose down
        env:
          ORACLE_PASSWORD: ${{ secrets.ORACLE_PASSWORD_SECRET }}
