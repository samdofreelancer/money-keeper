name: Integration Tests

on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - develop
      - master

jobs:
  build-images:
    name: Build migration Images
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io/${{ github.repository_owner }}
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 18
        uses: actions/setup-java@v4
        with:
          java-version: 18
          distribution: 'temurin'

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build migration image
        run: |
          docker build -f backend/Dockerfile.migration -t $REGISTRY/money-keeper-migration:$IMAGE_TAG backend
          docker push $REGISTRY/money-keeper-migration:$IMAGE_TAG

  integration-test:
    name: Run Integration Tests
    needs: build-images
    runs-on: ubuntu-latest
    env:
      SPRING_PROFILES_ACTIVE: ci
      SPRING_DATASOURCE_URL: jdbc:oracle:thin:@localhost:1521/XEPDB1
      REGISTRY: ghcr.io/${{ github.repository_owner }}
      IMAGE_TAG: ${{ github.sha }}
      VITE_BACKEND_HOST: backend
      ORACLE_PASSWORD: ${{ secrets.ORACLE_PASSWORD_SECRET }}
    services:
      oracle:
        image: gvenzl/oracle-xe:latest
        ports:
          - 1521:1521
        env:
          ORACLE_PASSWORD: ${{ secrets.ORACLE_PASSWORD_SECRET }}
        options: >-
          --health-cmd "bash -c 'echo select 1 from dual | sqlplus -s system/$ORACLE_PASSWORD@localhost:1521/XEPDB1 | grep -q 1'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 30
      migration:
        image: ghcr.io/${{ github.repository_owner }}/money-keeper-migration:${{ github.sha }}
        env:
          ORACLE_PASSWORD: ${{ secrets.ORACLE_PASSWORD_SECRET }}
        options: >-
          --health-cmd "bash -c 'exit 0'"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install xml2js package
        run: npm install xml2js
        working-directory: ./backend/scripts

      - name: Set environment variable for Spring profile
        run: echo "SPRING_PROFILES_ACTIVE=ci" >> $GITHUB_ENV

      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '18'
          cache: 'maven'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run integration tests
        run: mvn clean verify -Pmedium-test -DskipUnitTests=true
        working-directory: ./backend

      - name: Run test report aggregation script
        run: node aggregate-test-report.js ../target/medium-test-reports
        working-directory: ./backend/scripts
                
      - name: Upload Surefire Report
        uses: actions/upload-artifact@v4
        with:
          name: surefire-report-medium
          path: ./backend/target/medium-test-reports/
