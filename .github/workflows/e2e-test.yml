name: E2E Tests

on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - develop
      - master

jobs:
  build-images:
    name: Build Backend and Frontend Docker Images
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io/${{ github.repository_owner }}
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 18
        uses: actions/setup-java@v4
        with:
          java-version: 18
          distribution: 'temurin'

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build backend image
        run: |
          docker build -f backend/Dockerfile -t $REGISTRY/money-keeper-backend:$IMAGE_TAG backend
          docker push $REGISTRY/money-keeper-backend:$IMAGE_TAG

      - name: Build migration image
        run: |
          docker build -f backend/Dockerfile.migration -t $REGISTRY/money-keeper-migration:$IMAGE_TAG .
          docker push $REGISTRY/money-keeper-migration:$IMAGE_TAG

      - name: Build frontend image
        run: |
          cd frontend
          docker build -t $REGISTRY/money-keeper-frontend:$IMAGE_TAG .
          docker push $REGISTRY/money-keeper-frontend:$IMAGE_TAG

  e2e-test:
    name: Run E2E Tests
    runs-on: ubuntu-latest
    needs: build-images
    container:
      image: mcr.microsoft.com/playwright:v1.53.0-noble
    env:
      SPRING_PROFILES_ACTIVE: ci
      REGISTRY: ghcr.io/${{ github.repository_owner }}
      IMAGE_TAG: ${{ github.sha }}
      VITE_BACKEND_HOST: backend
    services:
      oracle:
        image: gvenzl/oracle-xe:latest
        ports:
          - 1521:1521
        env:
          ORACLE_PASSWORD: ${{ secrets.ORACLE_PASSWORD_SECRET }}
        options: >-
          --health-cmd "bash -c 'echo select 1 from dual | sqlplus -s system/$ORACLE_PASSWORD@localhost:1521/XEPDB1 | grep -q 1'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 30
      migration:
        image: ghcr.io/${{ github.repository_owner }}/money-keeper-migration:${{ github.sha }}
        env:
          ORACLE_PASSWORD: ${{ secrets.ORACLE_PASSWORD_SECRET }}
        options: >-
          --health-cmd "bash -c 'exit 0'"
      backend:
        image: ghcr.io/${{ github.repository_owner }}/money-keeper-backend:${{ github.sha }}
        ports:
          - 8080:8080
        options: >-
          --health-cmd "curl -f http://localhost:8080/actuator/health || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          SPRING_PROFILES_ACTIVE: ci
      frontend:
        image: ghcr.io/${{ github.repository_owner }}/money-keeper-frontend:${{ github.sha }}
        ports:
          - 5173:5173
        options: >-
          --health-cmd "curl -f http://localhost:5173 || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Oracle Instant Client and sqlplus
        run: |
          apt-get update
          apt-get install -y libaio unzip
          cp deployment/images/instantclient-basic-linux.x64-12.2.0.1.0.zip instantclient-basic.zip
          cp deployment/images/instantclient-sqlplus-linux.x64-12.2.0.1.0.zip instantclient-sqlplus.zip
          unzip instantclient-basic.zip -d $HOME/instantclient
          unzip instantclient-sqlplus.zip -d $HOME/instantclient
          export LD_LIBRARY_PATH=$HOME/instantclient/instantclient_12_2:$LD_LIBRARY_PATH
          export PATH=$HOME/instantclient/instantclient_12_2:$PATH
          ln -s $HOME/instantclient/instantclient_12_2/sqlplus /usr/bin/sqlplus

      - name: Install e2e dependencies
        run: npm install
        working-directory: ./e2e

      - name: Install e2e dependencies
        run: npm install
        working-directory: ./e2e

      - name: Create .env file
        run: cp .env.example .env
        working-directory: ./e2e

      - name: Wait for Oracle DB to be ready
        run: |
          apt-get update && apt-get install -y netcat-openbsd
          chmod +x backend/wait-for-oracle.sh
          ./backend/wait-for-oracle.sh
          echo "Oracle DB is ready"        
          
      - name: Wait for frontend service to be healthy
        run: |
          chmod +x backend/wait-for-frontend-port.sh
          ./backend/wait-for-frontend-port.sh

      - name: Wait for backend service to be healthy
        run: |
          chmod +x backend/wait-for-backend-port.sh
          ./backend/wait-for-backend-port.sh
        
      - name: Run e2e tests
        run: npm run test:parallel
        working-directory: ./e2e

      - name: Generate report
        if: always()
        run: npm run report
        working-directory: ./e2e

      - name: Upload report for Github Pages
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'e2e/reports/cucumber-html-report.html/'
          name: pages

  deploy-report:
    name: Deploy E2E Report to GitHub Pages
    runs-on: ubuntu-latest
    needs: e2e-test
    steps:
      - name: Download report artifact
        uses: actions/download-artifact@v4
        with:
          name: pages

      - name: List contents of publish directory for debugging
        run: ls -la ./cucumber-html-report || echo "Directory not found"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./cucumber-html-report

      - name: Print GitHub Pages URL
        run: |
          echo "GitHub Pages deployed at: https://${{ github.repository_owner }}.github.io/${{ github.repository }}/cucumber-html-report/"
