name: E2E Tests

on:
  workflow_call:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  e2e-test:
    name: Run E2E Tests
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.53.0-noble
    env:
      SPRING_PROFILES_ACTIVE: ci
      REGISTRY: ghcr.io/${{ github.repository_owner }}
      IMAGE_TAG: ${{ github.sha }}
      VITE_BACKEND_HOST: backend
    services:
      oracle:
        image: gvenzl/oracle-xe:latest
        ports:
          - 1521:1521
        env:
          ORACLE_PASSWORD: ${{ secrets.ORACLE_PASSWORD_SECRET }}
        options: >-
          --health-cmd "bash -c 'echo select 1 from dual | sqlplus -s system/$ORACLE_PASSWORD@localhost:1521/XEPDB1 | grep -q 1'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 30
      migration:
        image: ghcr.io/${{ github.repository_owner }}/money-keeper-migration-image:${{ github.sha }}
        env:
          ORACLE_PASSWORD: ${{ secrets.ORACLE_PASSWORD_SECRET }}
        options: >-
          --health-cmd "bash -c 'exit 0'"
      backend:
        image: ghcr.io/${{ github.repository_owner }}/money-keeper-backend-image:${{ github.sha }}
        ports:
          - 8080:8080
        options: >-
          --health-cmd "curl -f http://localhost:8080/actuator/health || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          SPRING_PROFILES_ACTIVE: ci
          ORACLE_PASSWORD: ${{ secrets.ORACLE_PASSWORD_SECRET }}
      frontend:
        image: ghcr.io/${{ github.repository_owner }}/money-keeper-frontend-image:${{ github.sha }}
        ports:
          - 5173:5173
        options: >-
          --health-cmd "curl -f http://localhost:5173 || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install e2e dependencies
        run: npm install
        working-directory: ./e2e

      - name: Create .env file
        run: cp .env.example .env
        working-directory: ./e2e
        
      - name: Run e2e tests
        run: npm run test:parallel
        working-directory: ./e2e

      - name: Generate report
        if: always()
        run: npm run report
        working-directory: ./e2e

      - name: Upload report for Github Pages
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'e2e/reports/cucumber-html-report.html'
          name: github-pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: List files in deployed artifact
        if: always()
        run: |
          echo "Files in e2e/reports/cucumber-html-report.html:"
          ls -l e2e/reports/cucumber-html-report.html
