name: E2E Tests

on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - develop
      - master

jobs:
  backend-build:
    name: Build Backend
    runs-on: ubuntu-latest
    container:
      image: maven:3.8.6-openjdk-18
      options: --mount type=volume,source=maven-repo,target=/root/.m2
    outputs:
      artifact-path: ${{ steps.upload-artifact.outputs.artifact-path }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build project
        run: mvn clean install -DskipTests
        working-directory: ./backend
        env:
          JAVA_HOME: /usr/lib/jvm/java-18-temurin

      - name: Upload backend artifact
        id: upload-artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-artifact
          path: backend/target

  e2e-test:
    name: Run E2E Tests
    runs-on: ubuntu-latest
    needs: backend-build
    container:
      image: mcr.microsoft.com/playwright:v1.53.0-noble
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download backend artifact
        uses: actions/download-artifact@v3
        with:
          name: backend-artifact
          path: ./backend/target

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend

      - name: Install e2e dependencies
        run: npm install
        working-directory: ./e2e

      - name: Start backend and frontend
        run: |
          java -jar ./backend/target/*.jar &
          npm start --prefix frontend &
          # Wait for backend to be ready
          for i in {1..30}; do
            if curl -sf http://localhost:8080/actuator/health; then
              echo "Backend is up!"
              break
            fi
            echo "Waiting for backend..."
            sleep 5
          done
          # Wait for frontend to be ready
          for i in {1..30}; do
            if curl -sf http://localhost:5173; then
              echo "Frontend is up!"
              break
            fi
            echo "Waiting for frontend..."
            sleep 5
          done
        shell: bash

      - name: Create .env file
        run: cp .env.example .env
        working-directory: ./e2e

      - name: Install Playwright Browsers
        run: npx playwright install-deps
        working-directory: ./e2e

      - name: Run e2e tests
        run: npm run test:parallel
        working-directory: ./e2e

      - name: Stop backend and frontend
        run: |
          pkill -f 'java -jar'
          pkill -f 'npm start'
        shell: bash

      - name: Generate report
        run: npm run report
        working-directory: ./e2e

      - name: Upload report for Github Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'e2e/reports/cucumber-html-report.html'
