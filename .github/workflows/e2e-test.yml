name: E2E Tests

on:
  workflow_call:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  e2e-test:
    name: Run E2E Tests
    runs-on: ubuntu-latest
    env:
      SPRING_PROFILES_ACTIVE: ci
      REGISTRY: ghcr.io/${{ github.repository_owner }}
      IMAGE_TAG: ${{ github.sha }}
      VITE_BACKEND_HOST: backend
      ORACLE_PASSWORD: ${{ secrets.ORACLE_PASSWORD_SECRET }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      - name: Start Oracle service
        run: ORACLE_PASSWORD=${{ secrets.ORACLE_PASSWORD_SECRET }} docker compose up -d oracle

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: e2e/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('e2e/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install e2e dependencies
        run: npm install
        working-directory: ./e2e

      - name: Run lint check and stop on error
        run: npm run lint
        working-directory: ./e2e

      - name: Create .env file
        run: cp .env.example .env
        working-directory: ./e2e

      - name: Run Flyway migration with retries
        run: |
          ORACLE_PASSWORD=${{ secrets.ORACLE_PASSWORD_SECRET }} docker compose up flyway
        env:
          SPRING_DATASOURCE_URL: jdbc:oracle:thin:@localhost:1522/XEPDB1
          
      - name: Start Backend and Frontend containers
        run: docker compose up -d backend frontend

      - name: Wait for Backend to be healthy
        run: |
          echo "Waiting for Backend to be healthy..."
          for i in {1..30}; do
            if curl -f http://localhost:8080/actuator/health; then
              echo "Backend is healthy"
              break
            fi
            echo "Waiting for Backend..."
            sleep 10
          done

      - name: Wait for Frontend to be healthy
        run: |
          echo "Waiting for Frontend to be healthy..."
          for i in {1..30}; do
            if curl -f http://localhost:5173; then
              echo "Frontend is healthy"
              break
            fi
            echo "Waiting for Frontend..."
            sleep 10
          done

      - name: Run e2e tests
        run: docker compose run --rm -e GITHUB_REF=${{ github.event.pull_request.head.ref || github.ref }} -e GITHUB_SHA=${{ github.event.pull_request.head.sha || github.sha }} -e GITHUB_REPOSITORY=${{ github.repository }} e2e npm run test:run-and-report

      - name: Upload report for Github Pages
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'e2e/reports/cucumber-html-report.html'
          name: github-pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: List files in deployed artifact
        if: always()
        run: |
          echo "Files in e2e/reports/cucumber-html-report.html:"
          ls -l e2e/reports/cucumber-html-report.html

      - name: Stop containers
        if: always()
        run: docker compose down
